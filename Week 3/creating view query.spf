<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>ContentFilters</key>
	<dict/>
	<key>auto_connect</key>
	<true/>
	<key>data</key>
	<dict>
		<key>connection</key>
		<dict>
			<key>database</key>
			<string>bank</string>
			<key>host</key>
			<string>127.0.0.1</string>
			<key>kcid</key>
			<string>6954207335203041666</string>
			<key>name</key>
			<string>localhost</string>
			<key>rdbms_type</key>
			<string>mysql</string>
			<key>sslCACertFileLocation</key>
			<string></string>
			<key>sslCACertFileLocationEnabled</key>
			<integer>0</integer>
			<key>sslCertificateFileLocation</key>
			<string></string>
			<key>sslCertificateFileLocationEnabled</key>
			<integer>0</integer>
			<key>sslKeyFileLocation</key>
			<string></string>
			<key>sslKeyFileLocationEnabled</key>
			<integer>0</integer>
			<key>type</key>
			<string>SPTCPIPConnection</string>
			<key>useSSL</key>
			<integer>0</integer>
			<key>user</key>
			<string>root</string>
		</dict>
		<key>session</key>
		<dict>
			<key>connectionEncoding</key>
			<string>utf8mb4</string>
			<key>contentFilterV2</key>
			<dict>
				<key>children</key>
				<array/>
				<key>filterClass</key>
				<string>groupNode</string>
				<key>isConjunction</key>
				<true/>
			</dict>
			<key>contentPageNumber</key>
			<integer>1</integer>
			<key>contentSelection</key>
			<data>
			YnBsaXN0MDDUAQIDBAUGBwpYJHZlcnNpb25ZJGFyY2hpdmVyVCR0
			b3BYJG9iamVjdHMSAAGGoF8QD05TS2V5ZWRBcmNoaXZlctEICVRk
			YXRhgAGtCwwZGhscHSEoLDA0OFUkbnVsbNMNDg8QFBhXTlMua2V5
			c1pOUy5vYmplY3RzViRjbGFzc6MREhOAAoADgASjFRYXgAWABoAI
			gAxUdHlwZVRyb3dzVGtleXNfECZTZWxlY3Rpb25EZXRhaWxUeXBl
			UHJpbWFyeUtleWVkRGV0YWlsc9MNDg8eHyCgoIAH0iIjJCVaJGNs
			YXNzbmFtZVgkY2xhc3Nlc18QE05TTXV0YWJsZURpY3Rpb25hcnmj
			JCYnXE5TRGljdGlvbmFyeVhOU09iamVjdNIODykroSqACYAL0g8t
			Li9ZTlMuc3RyaW5ngApaYWNjb3VudF9pZNIiIzEyXxAPTlNNdXRh
			YmxlU3RyaW5nozEzJ1hOU1N0cmluZ9IiIzU2Xk5TTXV0YWJsZUFy
			cmF5ozU3J1dOU0FycmF50iIjJjmiJicACAARABoAJAApADIANwBJ
			AEwAUQBTAGEAZwBuAHYAgQCIAIwAjgCQAJIAlgCYAJoAnACeAKMA
			qACtANYA3QDeAN8A4QDmAPEA+gEQARQBIQEqAS8BMQEzATUBOgFE
			AUYBUQFWAWgBbAF1AXoBiQGNAZUBmgAAAAAAAAIBAAAAAAAAADoA
			AAAAAAAAAAAAAAAAAAGd
			</data>
			<key>contentSortColIsAsc</key>
			<true/>
			<key>contentViewport</key>
			<string>{{0, 0}, {707, 787}}</string>
			<key>isToolbarVisible</key>
			<true/>
			<key>queries</key>
			<string>create or replace view loan_status as
select loan_id, amount-payments as bal, duration as term, 
case 
when status='A' then 'good-loan repaid'
when status='B' then 'defaulter-contract finished'
when status ='C' then 'good - on track'
else 'in debt- contract running'
end 
as 'status_descr'
from loan
order by status_descr, bal DESC;


select *
from district
where A3 regexp 'pra';

select status, max(amount)
from loan
group by status
order by max(amount) desc;

select k_symbol, ceiling(avg(amount))
from bank.order
where k_symbol &lt;&gt; ' '
group by k_symbol;

select district_id, count(account_id)
from account
group by district_id
order by count(account_id) desc
</string>
			<key>table</key>
			<string>account</string>
			<key>view</key>
			<string>SP_VIEW_CUSTOMQUERY</string>
			<key>windowVerticalDividerPosition</key>
			<real>214</real>
		</dict>
	</dict>
	<key>encrypted</key>
	<false/>
	<key>format</key>
	<string>connection</string>
	<key>queryFavorites</key>
	<array/>
	<key>queryHistory</key>
	<array>
		<string>select district_id, count(account_id)
from account
group by district_id
order by count(account_id) desc</string>
		<string>select district_id, count(account_id)
from account
group by district_id
order by count(account_id)</string>
		<string>select k_symbol, ceiling(avg(amount))
from bank.order
where k_symbol &lt;&gt; ' '
group by k_symbol</string>
		<string>select avg(k_symbol = " ") as empty, avg(k_symbol not " ") as filled
from bank.order</string>
		<string>select avg(k_symbol = " ") as empty, avg(k_symbol not " ") as filled
from order.bank</string>
		<string>select avg(k_symbol = "") as empty, avg(k_symbol not "") as filled
from order.bank</string>
		<string>select status, max(amount)
from loan
group by status
order by max(amount) desc</string>
		<string>select status, max(amount)
from loan
group by status
order by max(amount)</string>
		<string>select status, max(amount)
from loan
group by status
order by status</string>
		<string>select status, max(amount)
from loan
group by status</string>
		<string>select *
from district
where A3 regexp 'pra'</string>
		<string>create or replace view loan_status as
select loan_id, amount-payments as bal, duration as term, 
case 
when status='A' then 'good-loan repaid'
when status='B' then 'defaulter-contract finished'
when status ='C' then 'good - on track'
else 'in debt- contract running'
end 
as 'status_descr'
from loan
order by status_descr, bal DESC


select *
from district
where A3 regexp 'pra'</string>
		<string>create or replace view loan_status as
select loan_id, amount-payments as bal, duration as term, 
case 
when status='A' then 'good-loan repaid'
when status='B' then 'defaulter-contract finished'
when status ='C' then 'good - on track'
else 'in debt- contract running'
end 
as 'status_descr'
from loan
order by status_descr, bal DESC


select
	*
from
	district
where A3 regexp 'pra'</string>
		<string>create or replace view loan_status as
select loan_id, amount-payments as bal, duration as term, 
case 
when status='A' then 'good-loan repaid'
when status='B' then 'defaulter-contract finished'
when status ='C' then 'good - on track'
else 'in debt- contract running'
end 
as 'status_descr'
from loan
order by status_descr, bal DESC</string>
		<string>create or replace view 'loan_status' as
(select loan_id, amount-payments as bal, duration as term, 
case 
when status='A' then 'good-loan repaid'
when status='B' then 'defaulter-contract finished'
when status ='C' then 'good - on track'
else 'in debt- contract running'
end 
as 'status_descr'
from loan
order by status_descr, bal DESC)</string>
		<string>create or replace view 'loan_status' as
select loan_id, amount-payments as bal, duration as term, 
case 
when status='A' then 'good-loan repaid'
when status='B' then 'defaulter-contract finished'
when status ='C' then 'good - on track'
else 'in debt- contract running'
end 
as 'status_descr'
from loan
order by status_descr, bal DESC</string>
		<string>create view or replace 'loan_status' as
select loan_id, amount-payments as bal, duration as term, 
case 
when status='A' then 'good-loan repaid'
when status='B' then 'defaulter-contract finished'
when status ='C' then 'good - on track'
else 'in debt- contract running'
end 
as 'status_descr'
from loan
order by status_descr, bal DESC</string>
		<string>create view if not exists 'lona_status' as
(select loan_id, amount-payments as bal, duration as term, 
case 
when status='A' then 'good-loan repaid'
when status='B' then 'defaulter-contract finished'
when status ='C' then 'good - on track'
else 'in debt- contract running'
end 
as 'status_descr'
from loan
order by status_descr, bal DESC)</string>
		<string>create view if not exists 'lona_status' as
select loan_id, amount-payments as bal, duration as term, 
case 
when status='A' then 'good-loan repaid'
when status='B' then 'defaulter-contract finished'
when status ='C' then 'good - on track'
else 'in debt- contract running'
end 
as 'status_descr'
from loan
order by status_descr, bal DESC</string>
		<string>select loan_id, amount-payments as bal, duration as term, 
case 
when status='A' then 'good-loan repaid'
when status='B' then 'defaulter-contract finished'
when status ='C' then 'good - on track'
else 'in debt- contract running'
end 
as 'status_descr'
from loan
order by status_descr, bal DESC</string>
	</array>
	<key>rdbms_type</key>
	<string>mysql</string>
	<key>rdbms_version</key>
	<string>8.0.23</string>
	<key>version</key>
	<integer>1</integer>
</dict>
</plist>
